//========= Copyright © 1996-2005, Valve Corporation, All rights reserved. ============//
//
// Purpose: 
//
//=============================================================================//

#include "cbase.h"
#include "weapon_rivenblade.h"

IMPLEMENT_NETWORKCLASS_ALIASED( WeaponRivenBlade, DT_WeaponRivenBlade )

BEGIN_NETWORK_TABLE( CWeaponRivenBlade, DT_WeaponRivenBlade )
END_NETWORK_TABLE()

BEGIN_PREDICTION_DATA( CWeaponRivenBlade )
END_PREDICTION_DATA()

LINK_ENTITY_TO_CLASS( weapon_rivenblade, CWeaponRivenBlade );
PRECACHE_WEAPON_REGISTER( weapon_rivenblade );

acttable_t CWeaponRivenBlade::s_CommonActions[] = 
{
	{ ACT_CF_LATCH_JUMP_START,			ACT_CF_LATCH_JUMP_START_RIVENBLADE,		false },
	{ ACT_CF_LATCH_LEFT,				ACT_CF_LATCH_LEFT_RIVENBLADE,			false },
	{ ACT_CF_LATCH_LEFT_CHARGE,			ACT_CF_LATCH_LEFT_CHARGE_RIVENBLADE,	false },
	{ ACT_CF_LATCH_LEFT_WEAK_ATTACK,	ACT_CF_LATCH_LEFT_WEAK_ATTACK_RIVENBLADE,false },
	{ ACT_CF_LATCH_LEFT_STRONG_ATTACK,	ACT_CF_LATCH_LEFT_STRONG_ATTACK_RIVENBLADE,false },
	{ ACT_CF_LATCH_RIGHT,				ACT_CF_LATCH_RIGHT_RIVENBLADE,			false },
	{ ACT_CF_LATCH_RIGHT_CHARGE,		ACT_CF_LATCH_RIGHT_CHARGE_RIVENBLADE,	false },
	{ ACT_CF_LATCH_RIGHT_WEAK_ATTACK,	ACT_CF_LATCH_RIGHT_WEAK_ATTACK_RIVENBLADE,false },
	{ ACT_CF_LATCH_RIGHT_STRONG_ATTACK,	ACT_CF_LATCH_RIGHT_STRONG_ATTACK_RIVENBLADE,false },
	{ ACT_CF_LATCH_BACK,				ACT_CF_LATCH_BACK_RIVENBLADE,			false },
	{ ACT_CF_LATCH_BACK_CHARGE,			ACT_CF_LATCH_BACK_CHARGE_RIVENBLADE,	false },
	{ ACT_CF_LATCH_BACK_WEAK_ATTACK,	ACT_CF_LATCH_BACK_WEAK_ATTACK_RIVENBLADE,false },
	{ ACT_CF_LATCH_BACK_STRONG_ATTACK,	ACT_CF_LATCH_BACK_STRONG_ATTACK_RIVENBLADE,false },
};

acttable_t CWeaponRivenBlade::s_LongswordActions[] = 
{
	{ ACT_MP_RUN,						ACT_CF_RUN_RIVENBLADE,					false },
	{ ACT_MP_STAND_IDLE,				ACT_CF_IDLE_RIVENBLADE,					false },
	{ ACT_MP_CROUCH_IDLE,				ACT_CF_IDLE_CROUCH_RIVENBLADE,			false },
	{ ACT_MP_CROUCHWALK,				ACT_CF_WALK_CROUCH_RIVENBLADE,			false },
	{ ACT_CF_CHARGE,					ACT_CF_CHARGE_RIVENBLADE,				false },
	{ ACT_CF_WEAK_ATTACK,				ACT_CF_WEAK_ATTACK_RIVENBLADE,			false },
	{ ACT_CF_STRONG_ATTACK,				ACT_CF_STRONG_ATTACK_RIVENBLADE,		false },
	{ ACT_CF_C_ATTACK,					ACT_CF_C_ATTACK_RIVENBLADE,				false },
	{ ACT_CF_BLOCK,						ACT_CF_BLOCK_RIVENBLADE,				false },
	{ ACT_CF_BLOCKED,					ACT_CF_BLOCKED_RIVENBLADE,				false },
	{ ACT_CF_DFA_READY,					ACT_CF_DFA_READY_RIVENBLADE,			false },
	{ ACT_CF_DFA_ATTACK,				ACT_CF_DFA_ATTACK_RIVENBLADE,			false },
	{ ACT_MP_JUMP_START,				ACT_CF_JUMP_START_RIVENBLADE,			false },
	{ ACT_MP_JUMP_FLOAT,				ACT_CF_JUMP_FLOAT_RIVENBLADE,			false },
	{ ACT_MP_JUMP_LAND,					ACT_CF_JUMP_LAND_RIVENBLADE,			false },
	{ ACT_CF_POWERJUMP_FORWARD,			ACT_CF_POWERJUMP_FORWARD_RIVENBLADE,	false },
	{ ACT_CF_POWERJUMP_UP,				ACT_CF_POWERJUMP_UP_RIVENBLADE,			false },
	{ ACT_CF_POWERJUMP_LEFT,			ACT_CF_POWERJUMP_LEFT_RIVENBLADE,		false },
	{ ACT_CF_POWERJUMP_RIGHT,			ACT_CF_POWERJUMP_RIGHT_RIVENBLADE,		false },
	{ ACT_CF_POWERJUMP_BACK,			ACT_CF_POWERJUMP_BACK_RIVENBLADE,		false },

	{ ACT_CF_EXECUTE_ANYTHING,			ACT_CF_EXECUTE_UNARMED_UNARMED,			false },
	{ ACT_CF_EXECUTED_ANYTHING,			ACT_CF_EXECUTED_UNARMED_UNARMED,		false },

	{ ACT_CF_IDLE_NUMEN_ACTIVE,					ACT_CF_IDLE_RIVENBLADE_NUMEN,				false },
	{ ACT_CF_RUN_NUMEN_ACTIVE,					ACT_CF_RUN_RIVENBLADE_NUMEN,				false },
	{ ACT_CF_CHARGEUP_NUMEN_ACTIVE,				ACT_CF_CHARGEUP_RIVENBLADE_NUMEN,			false },
	{ ACT_CF_CAST_NUMEN_ACTIVE,					ACT_CF_CAST_RIVENBLADE_NUMEN,				false },
	{ ACT_CF_IDLE_NUMEN_ACTIVE,					ACT_CF_IDLE_RIVENBLADE_NUMEN,				false },
	{ ACT_CF_RUN_NUMEN_ACTIVE,					ACT_CF_RUN_RIVENBLADE_NUMEN,				false },
	{ ACT_CF_JUMP_START_NUMEN_ACTIVE,			ACT_CF_JUMP_START_RIVENBLADE_NUMEN,			false },
	{ ACT_CF_JUMP_FLOAT_NUMEN_ACTIVE,			ACT_CF_JUMP_FLOAT_RIVENBLADE_NUMEN,			false },
	{ ACT_CF_JUMP_LAND_NUMEN_ACTIVE,			ACT_CF_JUMP_LAND_RIVENBLADE_NUMEN,			false },
	{ ACT_CF_POWERJUMP_FORWARD_NUMEN_ACTIVE,	ACT_CF_POWERJUMP_FORWARD_RIVENBLADE_NUMEN,	false },
	{ ACT_CF_POWERJUMP_UP_NUMEN_ACTIVE,			ACT_CF_POWERJUMP_UP_RIVENBLADE_NUMEN,		false },
	{ ACT_CF_POWERJUMP_BACK_NUMEN_ACTIVE,		ACT_CF_POWERJUMP_BACK_RIVENBLADE_NUMEN,		false },
	{ ACT_CF_POWERJUMP_LEFT_NUMEN_ACTIVE,		ACT_CF_POWERJUMP_LEFT_RIVENBLADE_NUMEN,		false },
	{ ACT_CF_POWERJUMP_RIGHT_NUMEN_ACTIVE,		ACT_CF_POWERJUMP_RIGHT_RIVENBLADE_NUMEN,	false },
	{ ACT_CF_JUMP_START_NUMEN_ACTIVE,			ACT_CF_JUMP_START_RIVENBLADE_NUMEN,			false },
	{ ACT_CF_LATCH_LEFT_NUMEN_ACTIVE,			ACT_CF_LATCH_LEFT_RIVENBLADE_NUMEN,			false },
	{ ACT_CF_LATCH_LEFT_CHARGEUP_NUMEN_ACTIVE,	ACT_CF_LATCH_LEFT_CHARGEUP_RIVENBLADE_NUMEN,false },
	{ ACT_CF_LATCH_LEFT_CAST_NUMEN_ACTIVE,		ACT_CF_LATCH_LEFT_CAST_RIVENBLADE_NUMEN,	false },
	{ ACT_CF_LATCH_RIGHT_NUMEN_ACTIVE,			ACT_CF_LATCH_RIGHT_RIVENBLADE_NUMEN,		false },
	{ ACT_CF_LATCH_RIGHT_CHARGEUP_NUMEN_ACTIVE,	ACT_CF_LATCH_RIGHT_CHARGEUP_RIVENBLADE_NUMEN,false },
	{ ACT_CF_LATCH_RIGHT_CAST_NUMEN_ACTIVE,		ACT_CF_LATCH_RIGHT_CAST_RIVENBLADE_NUMEN,	false },
	{ ACT_CF_LATCH_BACK_NUMEN_ACTIVE,			ACT_CF_LATCH_BACK_RIVENBLADE_NUMEN,			false },
	{ ACT_CF_LATCH_BACK_CHARGEUP_NUMEN_ACTIVE,	ACT_CF_LATCH_BACK_CHARGEUP_RIVENBLADE_NUMEN,false },
	{ ACT_CF_LATCH_BACK_CAST_NUMEN_ACTIVE,		ACT_CF_LATCH_BACK_CAST_RIVENBLADE_NUMEN,	false },
};

acttable_t CWeaponRivenBlade::s_LongswordPistolActions[] = 
{
	{ ACT_MP_RUN,						ACT_CF_RUN_RIVENBLADE_PISTOL,					false },
	{ ACT_MP_STAND_IDLE,				ACT_CF_IDLE_RIVENBLADE_PISTOL,					false },
	{ ACT_MP_CROUCH_IDLE,				ACT_CF_IDLE_CROUCH_RIVENBLADE_PISTOL,			false },
	{ ACT_MP_CROUCHWALK,				ACT_CF_WALK_CROUCH_RIVENBLADE_PISTOL,			false },
	{ ACT_CF_DRAW_SECONDARY,			ACT_CF_DRAW_SECONDARY_RIVENBLADE_PISTOL,		false },
	{ ACT_CF_S_RANGE_ATTACK,			ACT_CF_S_RANGE_ATTACK_RIVENBLADE_PISTOL,		false },
	{ ACT_CF_S_RELOAD,					ACT_CF_S_RELOAD_RIVENBLADE_PISTOL,				false },
	{ ACT_CF_CHARGE,					ACT_CF_CHARGE_RIVENBLADE_PISTOL,				false },
	{ ACT_CF_WEAK_ATTACK,				ACT_CF_WEAK_ATTACK_RIVENBLADE_PISTOL,			false },
	{ ACT_CF_C_ATTACK,					ACT_CF_C_ATTACK_RIVENBLADE_PISTOL,				false },
	{ ACT_CF_BLOCK,						ACT_CF_BLOCK_RIVENBLADE_PISTOL,					false },
	{ ACT_CF_BLOCKED,					ACT_CF_BLOCKED_RIVENBLADE_PISTOL,				false },
	{ ACT_CF_DFA_READY,					ACT_CF_DFA_READY_RIVENBLADE_PISTOL,				false },
	{ ACT_CF_DFA_ATTACK,				ACT_CF_DFA_ATTACK_RIVENBLADE_PISTOL,			false },
	{ ACT_MP_JUMP_START,				ACT_CF_JUMP_START_RIVENBLADE_PISTOL,			false },
	{ ACT_MP_JUMP_FLOAT,				ACT_CF_JUMP_FLOAT_RIVENBLADE_PISTOL,			false },
	{ ACT_MP_JUMP_LAND,					ACT_CF_JUMP_LAND_RIVENBLADE_PISTOL,				false },
	{ ACT_CF_POWERJUMP_FORWARD,			ACT_CF_POWERJUMP_FORWARD_RIVENBLADE_PISTOL,		false },
	{ ACT_CF_POWERJUMP_UP,				ACT_CF_POWERJUMP_UP_RIVENBLADE_PISTOL,			false },
	{ ACT_CF_POWERJUMP_LEFT,			ACT_CF_POWERJUMP_LEFT_RIVENBLADE_PISTOL,		false },
	{ ACT_CF_POWERJUMP_RIGHT,			ACT_CF_POWERJUMP_RIGHT_RIVENBLADE_PISTOL,		false },
	{ ACT_CF_POWERJUMP_BACK,			ACT_CF_POWERJUMP_BACK_RIVENBLADE_PISTOL,		false },

	{ ACT_CF_EXECUTE_ANYTHING,			ACT_CF_EXECUTE_UNARMED_UNARMED,			false },
	{ ACT_CF_EXECUTED_ANYTHING,			ACT_CF_EXECUTED_UNARMED_UNARMED,		false },
};

acttable_t CWeaponRivenBlade::s_LongswordLongswordActions[] = 
{
	{ ACT_MP_RUN,						ACT_CF_RUN_RIVENBLADE_RIVENBLADE,				false },
	{ ACT_MP_STAND_IDLE,				ACT_CF_IDLE_RIVENBLADE_RIVENBLADE,				false },
	{ ACT_MP_CROUCH_IDLE,				ACT_CF_IDLE_CROUCH_RIVENBLADE_RIVENBLADE,		false },
	{ ACT_MP_CROUCHWALK,				ACT_CF_WALK_CROUCH_RIVENBLADE_RIVENBLADE,		false },
	{ ACT_CF_DRAW_SECONDARY,			ACT_CF_DRAW_SECONDARY_RIVENBLADE_RIVENBLADE,	false },
	{ ACT_CF_CHARGE,					ACT_CF_CHARGE_RIVENBLADE_RIVENBLADE,			false },
	{ ACT_CF_WEAK_ATTACK,				ACT_CF_WEAK_ATTACK_RIVENBLADE_RIVENBLADE,		false },
	{ ACT_CF_STRONG_ATTACK,				ACT_CF_STRONG_ATTACK_RIVENBLADE_RIVENBLADE,		false },
	{ ACT_CF_C_ATTACK,					ACT_CF_C_ATTACK_RIVENBLADE_RIVENBLADE,			false },
	{ ACT_CF_S_WEAK_ATTACK,				ACT_CF_S_WEAK_ATTACK_RIVENBLADE_RIVENBLADE,		false },
	{ ACT_CF_S_STRONG_ATTACK,			ACT_CF_S_STRONG_ATTACK_RIVENBLADE_RIVENBLADE,	false },
	{ ACT_CF_SC_ATTACK,					ACT_CF_SC_ATTACK_RIVENBLADE_RIVENBLADE,			false },
	{ ACT_CF_BLOCK,						ACT_CF_BLOCK_RIVENBLADE_RIVENBLADE,				false },
	{ ACT_CF_S_BLOCK,					ACT_CF_S_BLOCK_RIVENBLADE_RIVENBLADE,			false },
	{ ACT_CF_BLOCKED,					ACT_CF_BLOCKED_RIVENBLADE_RIVENBLADE,			false },
	{ ACT_CF_S_BLOCKED,					ACT_CF_S_BLOCKED_RIVENBLADE_RIVENBLADE,			false },
	{ ACT_CF_DFA_READY,					ACT_CF_DFA_READY_RIVENBLADE_RIVENBLADE,			false },
	{ ACT_CF_DFA_ATTACK,				ACT_CF_DFA_ATTACK_RIVENBLADE_RIVENBLADE,		false },
	{ ACT_MP_JUMP_START,				ACT_CF_JUMP_START_RIVENBLADE_RIVENBLADE,		false },
	{ ACT_MP_JUMP_FLOAT,				ACT_CF_JUMP_FLOAT_RIVENBLADE_RIVENBLADE,		false },
	{ ACT_MP_JUMP_LAND,					ACT_CF_JUMP_LAND_RIVENBLADE_RIVENBLADE,			false },
	{ ACT_CF_POWERJUMP_FORWARD,			ACT_CF_POWERJUMP_FORWARD_RIVENBLADE_RIVENBLADE,	false },
	{ ACT_CF_POWERJUMP_UP,				ACT_CF_POWERJUMP_UP_RIVENBLADE_RIVENBLADE,		false },
	{ ACT_CF_POWERJUMP_LEFT,			ACT_CF_POWERJUMP_LEFT_RIVENBLADE_RIVENBLADE,	false },
	{ ACT_CF_POWERJUMP_RIGHT,			ACT_CF_POWERJUMP_RIGHT_RIVENBLADE_RIVENBLADE,	false },
	{ ACT_CF_POWERJUMP_BACK,			ACT_CF_POWERJUMP_BACK_RIVENBLADE_RIVENBLADE,	false },

	{ ACT_CF_EXECUTE_ANYTHING,			ACT_CF_EXECUTE_RIVENBLADES_ANYTHING,			false },
	{ ACT_CF_EXECUTED_ANYTHING,			ACT_CF_EXECUTED_RIVENBLADES_ANYTHING,			false },
};

acttable_t *CWeaponRivenBlade::ActivityList( CFWeaponType eSecondary, bool bCommon )
{
	return ActivityListStatic(eSecondary, bCommon);
}

int CWeaponRivenBlade::ActivityListCount( CFWeaponType eSecondary, bool bCommon )
{
	return ActivityListCountStatic(eSecondary, bCommon);
}

acttable_t *CWeaponRivenBlade::ActivityListStatic( CFWeaponType eSecondary, bool bCommon )
{
	if (bCommon)
		return s_CommonActions;

	if (eSecondary == WT_PISTOL)
		return s_LongswordPistolActions;
	else if (eSecondary == WT_LONGSWORD)
		return s_LongswordLongswordActions;

	return s_LongswordActions;
}

int CWeaponRivenBlade::ActivityListCountStatic( CFWeaponType eSecondary, bool bCommon )
{
	if (bCommon)
		return ARRAYSIZE(s_CommonActions);

	if (eSecondary == WT_PISTOL)
		return ARRAYSIZE(s_LongswordPistolActions);
	else if (eSecondary == WT_LONGSWORD)
		return ARRAYSIZE(s_LongswordLongswordActions);

	return ARRAYSIZE(s_LongswordActions);
}

CWeaponRivenBlade::CWeaponRivenBlade()
{
}

void CWeaponRivenBlade::PrimaryAttack()
{
	BaseClass::PrimaryAttack();
}